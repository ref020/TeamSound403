// Generated by view binder compiler. Do not edit!
package com.alexmercerind.audire.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alexmercerind.audire.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAboutBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ScrollView aboutScrollView;

  @NonNull
  public final TextView descriptionTextView;

  @NonNull
  public final LinearLayout developerGitHubLinearLayout;

  @NonNull
  public final LinearLayout developerXLinearLayout;

  @NonNull
  public final LinearLayout githubLinearLayout;

  @NonNull
  public final LinearLayout licenseLinearLayout;

  @NonNull
  public final LinearLayout privacyLinearLayout;

  @NonNull
  public final TextView titleTextView;

  private ActivityAboutBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ScrollView aboutScrollView, @NonNull TextView descriptionTextView,
      @NonNull LinearLayout developerGitHubLinearLayout,
      @NonNull LinearLayout developerXLinearLayout, @NonNull LinearLayout githubLinearLayout,
      @NonNull LinearLayout licenseLinearLayout, @NonNull LinearLayout privacyLinearLayout,
      @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.aboutScrollView = aboutScrollView;
    this.descriptionTextView = descriptionTextView;
    this.developerGitHubLinearLayout = developerGitHubLinearLayout;
    this.developerXLinearLayout = developerXLinearLayout;
    this.githubLinearLayout = githubLinearLayout;
    this.licenseLinearLayout = licenseLinearLayout;
    this.privacyLinearLayout = privacyLinearLayout;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAboutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAboutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_about, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAboutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aboutScrollView;
      ScrollView aboutScrollView = ViewBindings.findChildViewById(rootView, id);
      if (aboutScrollView == null) {
        break missingId;
      }

      id = R.id.descriptionTextView;
      TextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.developerGitHubLinearLayout;
      LinearLayout developerGitHubLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (developerGitHubLinearLayout == null) {
        break missingId;
      }

      id = R.id.developerXLinearLayout;
      LinearLayout developerXLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (developerXLinearLayout == null) {
        break missingId;
      }

      id = R.id.githubLinearLayout;
      LinearLayout githubLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (githubLinearLayout == null) {
        break missingId;
      }

      id = R.id.licenseLinearLayout;
      LinearLayout licenseLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (licenseLinearLayout == null) {
        break missingId;
      }

      id = R.id.privacyLinearLayout;
      LinearLayout privacyLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (privacyLinearLayout == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new ActivityAboutBinding((CoordinatorLayout) rootView, aboutScrollView,
          descriptionTextView, developerGitHubLinearLayout, developerXLinearLayout,
          githubLinearLayout, licenseLinearLayout, privacyLinearLayout, titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
