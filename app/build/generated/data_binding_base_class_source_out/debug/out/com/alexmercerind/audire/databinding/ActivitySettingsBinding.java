// Generated by view binder compiler. Do not edit!
package com.alexmercerind.audire.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alexmercerind.audire.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.materialswitch.MaterialSwitch;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialToolbar materialToolbar;

  @NonNull
  public final LinearLayout settingsAppearanceSystemColorSchemeLinearLayout;

  @NonNull
  public final MaterialSwitch settingsAppearanceSystemColorSchemeMaterialSwitch;

  @NonNull
  public final LinearLayout settingsAppearanceThemeLinearLayout;

  @NonNull
  public final View settingsAppearanceThemePopupMenuAnchor;

  @NonNull
  public final TextView settingsAppearanceThemeSupportingText;

  @NonNull
  public final LinearLayout settingsBackupExportLinearLayout;

  @NonNull
  public final LinearLayout settingsBackupImportLinearLayout;

  @NonNull
  public final ScrollView settingsScrollView;

  private ActivitySettingsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialToolbar materialToolbar,
      @NonNull LinearLayout settingsAppearanceSystemColorSchemeLinearLayout,
      @NonNull MaterialSwitch settingsAppearanceSystemColorSchemeMaterialSwitch,
      @NonNull LinearLayout settingsAppearanceThemeLinearLayout,
      @NonNull View settingsAppearanceThemePopupMenuAnchor,
      @NonNull TextView settingsAppearanceThemeSupportingText,
      @NonNull LinearLayout settingsBackupExportLinearLayout,
      @NonNull LinearLayout settingsBackupImportLinearLayout,
      @NonNull ScrollView settingsScrollView) {
    this.rootView = rootView;
    this.materialToolbar = materialToolbar;
    this.settingsAppearanceSystemColorSchemeLinearLayout = settingsAppearanceSystemColorSchemeLinearLayout;
    this.settingsAppearanceSystemColorSchemeMaterialSwitch = settingsAppearanceSystemColorSchemeMaterialSwitch;
    this.settingsAppearanceThemeLinearLayout = settingsAppearanceThemeLinearLayout;
    this.settingsAppearanceThemePopupMenuAnchor = settingsAppearanceThemePopupMenuAnchor;
    this.settingsAppearanceThemeSupportingText = settingsAppearanceThemeSupportingText;
    this.settingsBackupExportLinearLayout = settingsBackupExportLinearLayout;
    this.settingsBackupImportLinearLayout = settingsBackupImportLinearLayout;
    this.settingsScrollView = settingsScrollView;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.materialToolbar;
      MaterialToolbar materialToolbar = ViewBindings.findChildViewById(rootView, id);
      if (materialToolbar == null) {
        break missingId;
      }

      id = R.id.settingsAppearanceSystemColorSchemeLinearLayout;
      LinearLayout settingsAppearanceSystemColorSchemeLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsAppearanceSystemColorSchemeLinearLayout == null) {
        break missingId;
      }

      id = R.id.settingsAppearanceSystemColorSchemeMaterialSwitch;
      MaterialSwitch settingsAppearanceSystemColorSchemeMaterialSwitch = ViewBindings.findChildViewById(rootView, id);
      if (settingsAppearanceSystemColorSchemeMaterialSwitch == null) {
        break missingId;
      }

      id = R.id.settingsAppearanceThemeLinearLayout;
      LinearLayout settingsAppearanceThemeLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsAppearanceThemeLinearLayout == null) {
        break missingId;
      }

      id = R.id.settingsAppearanceThemePopupMenuAnchor;
      View settingsAppearanceThemePopupMenuAnchor = ViewBindings.findChildViewById(rootView, id);
      if (settingsAppearanceThemePopupMenuAnchor == null) {
        break missingId;
      }

      id = R.id.settingsAppearanceThemeSupportingText;
      TextView settingsAppearanceThemeSupportingText = ViewBindings.findChildViewById(rootView, id);
      if (settingsAppearanceThemeSupportingText == null) {
        break missingId;
      }

      id = R.id.settingsBackupExportLinearLayout;
      LinearLayout settingsBackupExportLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsBackupExportLinearLayout == null) {
        break missingId;
      }

      id = R.id.settingsBackupImportLinearLayout;
      LinearLayout settingsBackupImportLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsBackupImportLinearLayout == null) {
        break missingId;
      }

      id = R.id.settingsScrollView;
      ScrollView settingsScrollView = ViewBindings.findChildViewById(rootView, id);
      if (settingsScrollView == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((CoordinatorLayout) rootView, materialToolbar,
          settingsAppearanceSystemColorSchemeLinearLayout,
          settingsAppearanceSystemColorSchemeMaterialSwitch, settingsAppearanceThemeLinearLayout,
          settingsAppearanceThemePopupMenuAnchor, settingsAppearanceThemeSupportingText,
          settingsBackupExportLinearLayout, settingsBackupImportLinearLayout, settingsScrollView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
