// Generated by view binder compiler. Do not edit!
package com.alexmercerind.audire.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alexmercerind.audire.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHistoryBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final LinearLayout historyLinearLayout;

  @NonNull
  public final RecyclerView historyRecyclerView;

  @NonNull
  public final MaterialToolbar primaryMaterialToolbar;

  @NonNull
  public final LinearLayout searchLinearLayout;

  @NonNull
  public final TextInputEditText searchTextInputEditText;

  @NonNull
  public final TextInputLayout searchTextInputLayout;

  private FragmentHistoryBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull LinearLayout historyLinearLayout,
      @NonNull RecyclerView historyRecyclerView, @NonNull MaterialToolbar primaryMaterialToolbar,
      @NonNull LinearLayout searchLinearLayout, @NonNull TextInputEditText searchTextInputEditText,
      @NonNull TextInputLayout searchTextInputLayout) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.historyLinearLayout = historyLinearLayout;
    this.historyRecyclerView = historyRecyclerView;
    this.primaryMaterialToolbar = primaryMaterialToolbar;
    this.searchLinearLayout = searchLinearLayout;
    this.searchTextInputEditText = searchTextInputEditText;
    this.searchTextInputLayout = searchTextInputLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.historyLinearLayout;
      LinearLayout historyLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (historyLinearLayout == null) {
        break missingId;
      }

      id = R.id.historyRecyclerView;
      RecyclerView historyRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (historyRecyclerView == null) {
        break missingId;
      }

      id = R.id.primaryMaterialToolbar;
      MaterialToolbar primaryMaterialToolbar = ViewBindings.findChildViewById(rootView, id);
      if (primaryMaterialToolbar == null) {
        break missingId;
      }

      id = R.id.searchLinearLayout;
      LinearLayout searchLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchLinearLayout == null) {
        break missingId;
      }

      id = R.id.searchTextInputEditText;
      TextInputEditText searchTextInputEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchTextInputEditText == null) {
        break missingId;
      }

      id = R.id.searchTextInputLayout;
      TextInputLayout searchTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchTextInputLayout == null) {
        break missingId;
      }

      return new FragmentHistoryBinding((CoordinatorLayout) rootView, appBarLayout,
          historyLinearLayout, historyRecyclerView, primaryMaterialToolbar, searchLinearLayout,
          searchTextInputEditText, searchTextInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
